{"version":3,"sources":["components/PhotoList/PhotoList.styles.ts","components/PhotoList/SearchBox.tsx","components/Loader/Loader.styles.ts","components/Loader/index.ts","components/Loader/Loader.tsx","components/ErrorPage/ErrorPage.styles.ts","components/ErrorPage/index.ts","components/ErrorPage/ErrorPage.tsx","components/PhotoPopup/PhotoPopup.styles.ts","components/PhotoPopup/index.ts","components/PhotoPopup/PhotoPopup.tsx","configs/appConfig.ts","queries/photos.ts","components/PhotoList/index.ts","components/PhotoList/PhotoList.tsx","App.styles.ts","App.tsx","index.tsx"],"names":["Container","styled","div","TextInput","Input","ClickableTableCell","TableCell","ThumbNail","img","MainTable","Table","SearchBoxContainer","PaginationController","TablePagination","SearchBox","keyword","setKeyword","doSearch","placeholder","onKeyDown","e","key","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","value","onChange","target","Loader","CircularProgress","ErrorPage","message","ModalContainer","Modal","CloseButton","Image","PhotoPopup","imageUrl","onClose","open","fontSize","htmlColor","src","alt","NUMBER_OF_ROWS_PER_PAGE","ALL_PHOTOS_QUERY","gql","PhotoList","useState","currentPage","setCurrentPage","popupImageUrl","setPopupImageUrl","getQueryVariables","page","options","paginate","limit","search","q","useQuery","variables","loading","error","data","fetchMore","refetch","client","photos","startIndex","photosDisplayed","slice","cache","reset","then","clearStore","TableHead","TableRow","TableBody","map","photo","url","id","title","thumbnailUrl","TableFooter","count","meta","totalCount","onChangePage","_","length","rowsPerPage","undefined","Main","main","Header","header","ApolloClient","uri","InMemoryCache","typePolicies","Query","fields","keyArgs","merge","existing","incoming","Object","assign","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAMaA,EAAYC,IAAOC,IAAV,mMAYTC,EAAYF,YAAOG,IAAPH,CAAH,4CAITI,EAAqBJ,YAAOK,IAAPL,CAAH,gDAIlBM,EAAYN,IAAOO,IAAV,6CAITC,EAAYR,YAAOS,IAAPT,CAAH,8GAQTU,EAAqBV,IAAOC,IAAV,4CAIlBU,EAAuBX,YAAOY,IAAPZ,CAAH,2K,OCIlBa,EAjC6B,SAAC,GAItC,IAHLC,EAGI,EAHJA,QACAC,EAEI,EAFJA,WACAC,EACI,EADJA,SAWA,OACE,cAACN,EAAD,UACE,cAACR,EAAD,CACEe,YAAY,2BACZC,UAVgB,SAACC,GACP,UAAVA,EAAEC,KACJJ,KASEK,aACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACE,cAACC,EAAA,EAAD,CAAYC,aAAW,SAASC,QAASV,EAAzC,SACE,cAAC,IAAD,QAINW,MAAOb,EACPc,SAtBW,SAACT,GAAD,OACfJ,EAAWI,EAAGU,OAAQF,a,mCCjBb5B,EAAYC,IAAOC,IAAV,iHCAP6B,ECEA,WACb,OACE,cAAC,EAAD,UACE,cAACC,EAAA,EAAD,OCLOhC,EAAYC,IAAOC,IAAV,2DCAP+B,ECK6B,SAAC,GAA4C,IAAD,IAAzCC,eAAyC,MAA/B,0BAA+B,EACtF,OACE,eAAC,EAAD,WACIA,EADJ,+B,6BCLSC,GAAiBlC,YAAOmC,KAAPnC,CAAH,6CAIdD,GAAYC,IAAOC,IAAV,oJASTmC,GAAcpC,YAAOwB,IAAPxB,CAAH,kKAWXqC,GAAQrC,IAAOO,IAAV,4GC1BH+B,GCY8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,QAAb,OAC3C,cAACN,GAAD,CAAgBO,OAAQF,EAAUC,QAASA,EAA3C,SACE,eAAC,GAAD,WACE,cAACJ,GAAD,CAAaV,QAASc,EAAtB,SACE,cAAC,KAAD,CAAWE,SAAS,QAAQC,UAAU,YAExC,cAACN,GAAD,CAAOO,IAAKL,EAAUM,IAAI,W,oBCpBnBC,GAA0B,GCE1BC,GAAmBC,cAAH,0RCAdC,GCoBG,WAAO,IAAD,EACgBC,mBAAS,GADzB,mBACfC,EADe,KACFC,EADE,OAEoBF,qBAFpB,mBAEfG,EAFe,KAEAC,EAFA,OAGQJ,mBAAS,IAHjB,mBAGfpC,EAHe,KAGNC,EAHM,KAKhBwC,EAAoB,SAACC,GAAD,IAAe1C,EAAf,uDAAyB,GAAzB,MAAiC,CACzD2C,QAAS,CACPC,SAAU,CACRF,OACAG,MAAOb,IAETc,OAAQ,CAAEC,EAAG/C,MAXK,EAsBlBgD,mBAASf,GAAkB,CAAEgB,UAAWR,EAAkB,KAN5DS,EAhBoB,EAgBpBA,QACAC,EAjBoB,EAiBpBA,MACAC,EAlBoB,EAkBpBA,KACAC,EAnBoB,EAmBpBA,UACAC,EApBoB,EAoBpBA,QACAC,EArBoB,EAqBpBA,OAGF,GAAIL,EACF,OAAO,cAAC,EAAD,IAGT,GAAIC,EACF,OAAO,cAAC,EAAD,IA7Ba,IAgCdK,EAAWJ,EAAXI,OACFC,EAAapB,EAAcL,GAC3B0B,EAA2BF,EAAOJ,KAAKO,MAC3CF,EACAA,EAAazB,IAoBf,OACE,eAAC/C,EAAD,WACE,cAAC,EAAD,CACEe,QAASA,EACTC,WAAYA,EACZC,SAZe,kBACnBqD,EAAOK,MAAMC,QAAQC,MAAK,WACxBP,EAAOQ,aAAaD,MAAK,WACvBR,EAAQb,EAAkB,EAAGzC,IAAU8D,MAAK,kBAAMxB,EAAe,eAWnE,eAAC5C,EAAD,WACE,cAACsE,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAAC1E,EAAA,EAAD,iBACA,cAACA,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,yBAGJ,cAAC2E,GAAA,EAAD,UACGR,EAAgBS,KAAI,SAACC,GAAD,OACnB,eAACH,EAAA,EAAD,WACE,cAAC3E,EAAD,CAAoBsB,QAAS,kBAAM4B,EAAiB4B,EAAMC,MAA1D,SACGD,EAAME,KAET,cAAC/E,EAAA,EAAD,UAAY6E,EAAMG,QAClB,cAACjF,EAAD,CAAoBsB,QAAS,kBAAM4B,EAAiB4B,EAAMC,MAA1D,SACE,cAAC7E,EAAD,CAAWsC,IAAKsC,EAAMI,aAAczC,IAAKqC,EAAMG,YANpCH,EAAME,SAWzB,cAACG,GAAA,EAAD,UACE,cAACR,EAAA,EAAD,UACE,cAACpE,EAAD,CACE6E,MAAOlB,EAAOmB,KAAKC,WACnBlC,KAAML,EACNwC,aAlDS,SAACC,EAAQpC,GACxBA,EAAOV,IAA2BwB,EAAOJ,KAAK2B,OAChD1B,EAAU,CACRJ,UAAWR,EAAkBJ,EAAc,EAAGrC,KAC7C8D,MAAK,kBAAMxB,EAAeI,MAE7BJ,EAAeI,IA6CPsC,YAAahD,YAKrB,cAAC,GAAD,CACEP,SAAUc,EACVb,QAAS,kBAAMc,OAAiByC,UCrH3BhG,GAAYC,IAAOC,IAAV,0BAET+F,GAAOhG,IAAOiG,KAAV,mEAKJC,GAASlG,IAAOmG,OAAV,6NCFb9B,GAAS,IAAI+B,eAAa,CAC9BC,ILNyB,qCKOzB3B,MAAO,IAAI4B,gBAAc,CACvBC,aAAc,CACZC,MAAO,CACLC,OAAQ,CACNnC,OAAQ,CACNoC,SAAS,EACTC,MAFM,WAEoC,IAApCC,EAAmC,uDAAxB,CAAE1C,KAAM,IAAM2C,EAAU,uCACvC,OAAOC,OAAOC,OAAO,GAAIF,EAAU,CACjC3C,KAAK,GAAD,mBAAM0C,EAAS1C,MAAf,YAAwB2C,EAAS3C,kBAqBtC8C,GAXH,kBACV,cAAC,iBAAD,CAAgB3C,OAAQA,GAAxB,SACE,eAAC,GAAD,WACE,cAAC6B,GAAD,yBACA,cAACF,GAAD,UACE,cAAC,GAAD,YC3BRiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7b4b1eb0.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport Input from '@material-ui/core/Input';\nimport TableCell from '@material-ui/core/TableCell';\nimport Table from '@material-ui/core/Table';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nexport const Container = styled.div`\n  margin-top: 60px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0 60px;\n\n  @media (max-width: 768px) {\n    padding: 8px;\n  }\n`;\n\nexport const TextInput = styled(Input)`\n  width: 100%;\n`;\n\nexport const ClickableTableCell = styled(TableCell)`\n  cursor: pointer;\n`;\n\nexport const ThumbNail = styled.img`\n  height: 60px;\n`;\n\nexport const MainTable = styled(Table)`\n  margin-top: 60px;\n\n  @media (max-width: 768px) {\n    margin-top: 16px;\n  }\n`;\n\nexport const SearchBoxContainer = styled.div`\n  width: 100%;\n`;\n\nexport const PaginationController = styled(TablePagination)`\n  .MuiTablePagination-spacer + .MuiTablePagination-caption {\n    display: none;\n  }\n  .MuiTablePagination-input {\n    display: none;\n  }\n`;\n","import InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React, { FunctionComponent, ChangeEvent } from 'react';\n\nimport { SearchBoxContainer, TextInput } from './PhotoList.styles';\n\ninterface Props {\n  keyword: string;\n  setKeyword: (keyword: string) => void;\n  doSearch: () => void;\n}\n\nconst SearchBox: FunctionComponent<Props> = ({\n  keyword,\n  setKeyword,\n  doSearch,\n}) => {\n  const onChange = (e: ChangeEvent<HTMLInputElement>) =>\n    setKeyword(e!.target!.value);\n\n  const handleKeyDown = (e: any) => {\n    if (e.key === 'Enter') {\n      doSearch();\n    }\n  };\n\n  return (\n    <SearchBoxContainer>\n      <TextInput\n        placeholder=\"Search keywords on title\"\n        onKeyDown={handleKeyDown}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton aria-label=\"search\" onClick={doSearch}>\n              <SearchIcon />\n            </IconButton>\n          </InputAdornment>\n        }\n        value={keyword}\n        onChange={onChange}\n      />\n    </SearchBoxContainer>\n  );\n};\n\nexport default SearchBox;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  padding-top: 200px;\n`\n","import Loader from './Loader';\n\nexport default Loader;\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Container } from './Loader.styles';\n\nconst Loader = () => {\n  return (\n    <Container>\n      <CircularProgress />\n    </Container>\n  );\n};\n\nexport default Loader;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n  color: red;\n`\n","import ErrorPage from './ErrorPage';\n\nexport default ErrorPage;\n","import React, { FunctionComponent } from 'react';\nimport { Container } from './ErrorPage.styles';\n\ninterface Props {\n  message?: string\n}\n\nconst ErrorPage: FunctionComponent<Props> = ({ message = 'Unknown error happened.'}) => {\n  return (\n    <Container>\n      { message } Please try again later.\n    </Container>\n  );\n};\n\nexport default ErrorPage;\n","import styled from 'styled-components';\nimport IconButton from '@material-ui/core/IconButton';\nimport Modal from '@material-ui/core/Modal';\n\nexport const ModalContainer = styled(Modal)`\n  width: 100vw;\n`;\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  outline: none;\n  position: relative;\n`;\n\nexport const CloseButton = styled(IconButton)`\n  position: absolute !important;\n  top: 16px;\n  right: 16px;\n\n  @media (max-width: 768px) {\n    top: 8px;\n    right: 8px;\n  }\n`;\n\nexport const Image = styled.img`\n  object-fit: contain;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n","import PhotoPopup from './PhotoPopup';\n\nexport default PhotoPopup;\n","import React, { FunctionComponent } from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {\n  Container,\n  CloseButton,\n  Image,\n  ModalContainer,\n} from './PhotoPopup.styles';\n\ninterface Props {\n  imageUrl: string | undefined;\n  onClose: () => void;\n}\n\nconst PhotoPopup: FunctionComponent<Props> = ({ imageUrl, onClose }) => (\n  <ModalContainer open={!!imageUrl} onClose={onClose}>\n    <Container>\n      <CloseButton onClick={onClose}>\n        <CloseIcon fontSize=\"large\" htmlColor=\"white\" />\n      </CloseButton>\n      <Image src={imageUrl} alt=\"\" />\n    </Container>\n  </ModalContainer>\n);\n\nexport default PhotoPopup;\n","export const NUMBER_OF_ROWS_PER_PAGE = 10\n\nexport const apiEndpoint = 'https://graphqlzero.almansi.me/api'\n","import { gql } from '@apollo/client';\n\nexport const ALL_PHOTOS_QUERY = gql`\n  query allPhotosQuery($options: PageQueryOptions) {\n    photos(options: $options) @connection(key: \"photos\") {\n      data {\n        id\n        title\n        url\n        thumbnailUrl\n      }\n      meta {\n        totalCount\n      }\n    }\n  }\n`;\n","import PhotoList from './PhotoList';\n\nexport default PhotoList;\n","import React, { useState } from 'react';\nimport SearchBox from './SearchBox';\nimport {\n  Container,\n  ClickableTableCell,\n  ThumbNail,\n  MainTable,\n  PaginationController,\n} from './PhotoList.styles';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport { useQuery } from '@apollo/client';\nimport Loader from '../Loader';\nimport ErrorPage from '../ErrorPage';\nimport PhotoPopup from '../PhotoPopup';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport { NUMBER_OF_ROWS_PER_PAGE } from '../../configs/appConfig';\nimport { ALL_PHOTOS_QUERY } from '../../queries/photos';\nimport { Photo, PhotosData } from '../../types/Photo';\n\nconst PhotoList = () => {\n  const [currentPage, setCurrentPage] = useState(0);\n  const [popupImageUrl, setPopupImageUrl] = useState();\n  const [keyword, setKeyword] = useState('');\n\n  const getQueryVariables = (page: number, keyword = '') => ({\n    options: {\n      paginate: {\n        page,\n        limit: NUMBER_OF_ROWS_PER_PAGE,\n      },\n      search: { q: keyword },\n    },\n  });\n\n  const {\n    loading,\n    error,\n    data,\n    fetchMore,\n    refetch,\n    client,\n  } = useQuery(ALL_PHOTOS_QUERY, { variables: getQueryVariables(1) });\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  if (error) {\n    return <ErrorPage />;\n  }\n\n  const { photos } = data as PhotosData;\n  const startIndex = currentPage * NUMBER_OF_ROWS_PER_PAGE;\n  const photosDisplayed: Photo[] = photos.data.slice(\n    startIndex,\n    startIndex + NUMBER_OF_ROWS_PER_PAGE\n  );\n\n  const onChangePage = (_: any, page: number) => {\n    if (page * NUMBER_OF_ROWS_PER_PAGE >= photos.data.length) {\n      fetchMore({\n        variables: getQueryVariables(currentPage + 2, keyword),\n      }).then(() => setCurrentPage(page));\n    } else {\n      setCurrentPage(page);\n    }\n  };\n\n  const searchPhotos = () =>\n    client.cache.reset().then(() => {\n      client.clearStore().then(() => {\n        refetch(getQueryVariables(1, keyword)).then(() => setCurrentPage(0));\n      });\n    });\n\n  return (\n    <Container>\n      <SearchBox\n        keyword={keyword}\n        setKeyword={setKeyword}\n        doSearch={searchPhotos}\n      />\n      <MainTable>\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n            <TableCell>Title</TableCell>\n            <TableCell>Photo</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {photosDisplayed.map((photo: any) => (\n            <TableRow key={photo.id}>\n              <ClickableTableCell onClick={() => setPopupImageUrl(photo.url)}>\n                {photo.id}\n              </ClickableTableCell>\n              <TableCell>{photo.title}</TableCell>\n              <ClickableTableCell onClick={() => setPopupImageUrl(photo.url)}>\n                <ThumbNail src={photo.thumbnailUrl} alt={photo.title} />\n              </ClickableTableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <PaginationController\n              count={photos.meta.totalCount}\n              page={currentPage}\n              onChangePage={onChangePage}\n              rowsPerPage={NUMBER_OF_ROWS_PER_PAGE}\n            />\n          </TableRow>\n        </TableFooter>\n      </MainTable>\n      <PhotoPopup\n        imageUrl={popupImageUrl}\n        onClose={() => setPopupImageUrl(undefined)}\n      />\n    </Container>\n  );\n};\n\nexport default PhotoList;\n","import styled from 'styled-components';\n\nexport const Container = styled.div``;\n\nexport const Main = styled.main`\n  max-width: 1024px;\n  margin: auto;\n`;\n\nexport const Header = styled.header`\n  width: 100%;\n  height: 100px;\n  background-color: #5079ba;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 32px;\n  font-weight: bold;\n`;\n","import React from 'react';\nimport PhotoList from './components/PhotoList';\nimport { ApolloProvider } from '@apollo/client';\nimport { Container, Main, Header } from './App.styles';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { apiEndpoint } from './configs/appConfig';\n\nconst client = new ApolloClient({\n  uri: apiEndpoint,\n  cache: new InMemoryCache({\n    typePolicies: {\n      Query: {\n        fields: {\n          photos: {\n            keyArgs: false,\n            merge(existing = { data: [] }, incoming) {\n              return Object.assign({}, incoming, {\n                data: [...existing.data, ...incoming.data],\n              });\n            },\n          },\n        },\n      },\n    },\n  }),\n});\n\nconst App = () => (\n  <ApolloProvider client={client}>\n    <Container>\n      <Header>Photo List</Header>\n      <Main>\n        <PhotoList />\n      </Main>\n    </Container>\n  </ApolloProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}